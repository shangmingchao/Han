apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def versionPropertiesFile = rootProject.file("version.properties")
def versionProperties = new Properties()
versionProperties.load(new FileInputStream(versionPropertiesFile))
def versionMajor = versionProperties['versionMajor'].toInteger()
def versionMinor = versionProperties['versionMinor'].toInteger()
def versionPatch = versionProperties['versionPatch'].toInteger()
def versionBuild = versionProperties['versionBuild'].toInteger()

android {
    compileSdkVersion build_versions.target_sdk

    defaultConfig {
        applicationId "com.frank.han"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias "han"
            keyPassword keystoreProperties.containsKey("keyPassword") ? keystoreProperties['keyPassword'] : System.getenv("keyPassword")
            storeFile file("../han.keystore")
            storePassword keystoreProperties.containsKey("storePassword") ? keystoreProperties['storePassword'] : System.getenv("storePassword")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            testCoverageEnabled true
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.name}_${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}.apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.kotlin
    implementation deps.androidx.app_compat
    implementation deps.androidx.ktx_core
    implementation deps.androidx.ktx_collection
    implementation deps.androidx.ktx_fragment
    implementation deps.androidx.ktx_lifecycle_runtime
    implementation deps.androidx.ktx_lifecycle_viewmodel
    implementation deps.androidx.ktx_lifecycle_livedata
    implementation deps.androidx.ktx_navigation_fragment
    implementation deps.androidx.ktx_navigation_ui
    implementation deps.androidx.constraint_layout

    implementation deps.retrofit.core
    implementation deps.retrofit.converter_gson

    implementation deps.okhttp.logging_interceptor

    implementation deps.room.core
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt deps.room.compiler
    implementation deps.room.ktx

    implementation deps.koin.core
    implementation deps.koin.ext
    implementation deps.koin.android
    implementation deps.koin.androidx_scope
    implementation deps.koin.androidx_viewmodel
    implementation deps.koin.androidx_fragment
    implementation deps.koin.androidx_ext

    implementation deps.stetho.core
    implementation deps.stetho.okhttp3_helper

    testImplementation deps.junit
    testImplementation deps.androidx_test.core
    testImplementation deps.okhttp.mock
    testImplementation deps.room.testing
    testImplementation deps.koin.test

    androidTestImplementation deps.androidx_test.core
    androidTestImplementation deps.androidx_test.runner
    androidTestImplementation deps.androidx_test.rules
    androidTestImplementation deps.androidx_test.junit
    androidTestImplementation deps.androidx_test.truth
    androidTestImplementation deps.androidx_test.espresso_core
    androidTestImplementation deps.androidx_test.espresso_contrib
    androidTestImplementation deps.androidx_test.espresso_intents
    androidTestImplementation deps.androidx_test.uiautomator
}
